// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ServiceContext))]
    [Migration("20231102185530_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Administrador", b =>
                {
                    b.Property<int>("Id_Administrador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Administrador"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_administrador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Administrador");

                    b.ToTable("Administrador", (string)null);
                });

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Property<int>("Id_Category")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Category"));

                    b.Property<string>("Name_category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Category");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Entities.Guest", b =>
                {
                    b.Property<int>("Id_guest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_guest"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_guest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_guest");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("Entities.GuestCart", b =>
                {
                    b.Property<int>("Id_guestCart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_guestCart"));

                    b.Property<int>("Id_Product")
                        .HasColumnType("int");

                    b.Property<int>("Id_guest")
                        .HasColumnType("int");

                    b.Property<double>("Price_product")
                        .HasColumnType("float");

                    b.Property<int>("Quantity_product")
                        .HasColumnType("int");

                    b.Property<double>("Total_price")
                        .HasColumnType("float");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_guestCart");

                    b.HasIndex("Id_Product");

                    b.HasIndex("Id_guest");

                    b.ToTable("GuestCart");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Property<int>("Id_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Product"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Administrador")
                        .HasColumnType("int");

                    b.Property<int>("Id_Category")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_product")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("Id_Product");

                    b.HasIndex("Id_Administrador");

                    b.HasIndex("Id_Category");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Entities.GuestCart", b =>
                {
                    b.HasOne("Entities.Product", "Product")
                        .WithMany("GuestCart")
                        .HasForeignKey("Id_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Guest", "Guest")
                        .WithMany("GuestCart")
                        .HasForeignKey("Id_guest")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.HasOne("Entities.Administrador", "Administrador")
                        .WithMany("Product")
                        .HasForeignKey("Id_Administrador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("Id_Category")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Entities.Administrador", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.Guest", b =>
                {
                    b.Navigation("GuestCart");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Navigation("GuestCart");
                });
#pragma warning restore 612, 618
        }
    }
}
